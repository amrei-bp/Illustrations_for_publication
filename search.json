[
  {
    "objectID": "quarto.html",
    "href": "quarto.html",
    "title": "",
    "section": "",
    "text": "Code"
  },
  {
    "objectID": "quarto.html#yaml-header",
    "href": "quarto.html#yaml-header",
    "title": "",
    "section": "YAML header",
    "text": "YAML header\n---\ntitle: \"Hello, Quarto\"\nformat: html\neditor: visual\n---\nThe YAML header resides at the top of the document, but is optional. It is marked by three dashes on either end and follows the basic YAML syntax, using key-value pairs key: value.\nCommon fields in the header are title, author, subtitle, date, as well as customizable fields such as theme, fontcolor.\nHere you can find the fields that are available in quarto for HTML documents."
  },
  {
    "objectID": "quarto.html#code-chunks",
    "href": "quarto.html#code-chunks",
    "title": "",
    "section": "Code Chunks",
    "text": "Code Chunks\n```{.r}\n#| label: load-packages\n#| include: false\n\nlibrary(tidyverse)\nlibrary(palmerpenguins)\n```\nCan be added anywhere in the document (apart from the header). Different chunks in the same document can execute different languages. The language is identified by the curly brackets at the beginning.\nOptional code chunk options are listed below and are identified by #|.\nIn RStudio you can either render the entire document, or individual chunks."
  },
  {
    "objectID": "quarto.html#markdown-text",
    "href": "quarto.html#markdown-text",
    "title": "",
    "section": "Markdown Text",
    "text": "Markdown Text\nFormated text between the code chunks with\n\nsection headers (#, ##, ###)\nhyperlinks ([in-line text](web-address))\nembedded images\ninline code chunks\nand more\n\nThis text is there to help you and others. It can explain why you do certain things with your data, can describe results, make comments, tell a story…"
  },
  {
    "objectID": "quarto.html#how-it-works",
    "href": "quarto.html#how-it-works",
    "title": "",
    "section": "how it works",
    "text": "how it works\n\n\n\n\n\nWhen you render the document, knitr executes all of the code chunks and creates a new markdown, which includes code and output, as well as the text. Then, pandoc takes this .md file and creates the final output."
  },
  {
    "objectID": "quarto.html#quarto-1",
    "href": "quarto.html#quarto-1",
    "title": "",
    "section": "quarto",
    "text": "quarto\nQuarto documentation\nAwesome quarto, a collection of quarto documents to check out and get inspired by."
  },
  {
    "objectID": "quarto.html#color-in-illustrations",
    "href": "quarto.html#color-in-illustrations",
    "title": "",
    "section": "color in illustrations",
    "text": "color in illustrations\nBetter plots\nChapter on Highlighting in Plots\nPractical Rules for Using Color in Charts\n\nif you do not have code\nyou can use the one below:\n---\ntitle: \"ggplot2 demo\"\nauthor: \"Norah Jones\"\ndate: \"5/22/2021\"\nformat: \n  html:\n    fig-width: 8\n    fig-height: 4\n    code-fold: true\n---\n\n## Air Quality\n\n@fig-airquality further explores the impact of temperature on ozone level.\n\n```{r}\n#| label: fig-airquality\n#| fig-cap: \"Temperature and ozone level.\"\n#| warning: false\n\nlibrary(ggplot2)\nggplot(airquality, aes(Temp, Ozone)) + \n  geom_point() + \n  geom_smooth(method = \"loess\")\n```"
  },
  {
    "objectID": "git_github.html",
    "href": "git_github.html",
    "title": "",
    "section": "",
    "text": "Code\n\n\n\n\nIn the following exercise you will create a github repository to track your code.\nLet’s first have a look at Github, the code hosting platform that is based on git. We will do this together.\n\nIn this tutorial\nWe will now:\n\ncreate a repository\nedit some files\ncommit the changes\nlook at the history of the respository.\n\nLet’s get started!\n\n\nCreate a repository\n\nname it\nadd a description\nmake it public\nadd a README\nadd the R gitignore\nadd the license\ncreate the repository\n\nThink about your project and the code you will have in the repository. What license would fit?\nChoose an open source license can help you figure out what license is appropriate.\n\n\nEdit the README\nYou can edit the readme to add relevant information. The format is classic markdown, the same as you have worked with before. Here is a guide to basic markdown styling.\n\n\nSave the README\nYou save the file on Github by clicking on Commit changes. This will prompt you to enter a commit message. This is the information that will accompany your changes and will help you find changes you might be looking for.\n\n\nLook at the commit history of the repository\nThere is a little button with a clock symbol that will get you to the history of the repository. It lists all the commits, with the commit message, the associated author, and its identifier.\nIf you click on an individual commit you will see the changes that are captured within. Your brand new repository is of course a little bare-boned, but if you check out a repository that is a bit older you will get more information. Check out the SLUBI 3bees workshop series github page, for example.\n\n\nFurther resources\nIf you want to have a short introduction to the basic mechanisms in Github, you can follow this tutorial, which guides you through making a repository, making a branch, committing a file, making a pull request and merging the pull request. Some of these we will cover today, others will be useful once you use git and github on a more regular basis.\n\n\neven more resources\ngithub skills"
  },
  {
    "objectID": "tagging.html",
    "href": "tagging.html",
    "title": "",
    "section": "",
    "text": "Code"
  },
  {
    "objectID": "tagging.html#lightweight-versus-annotated",
    "href": "tagging.html#lightweight-versus-annotated",
    "title": "",
    "section": "lightweight versus annotated",
    "text": "lightweight versus annotated\nGit supports two types of tags: lightweight and annotated.\nA lightweight tag is pretty much just a pointer to a specific commit.\nAnnotated tags are stored as full objects in the Git database. They’re checksummed; contain the tagger name, email, and date; have a tagging message; and can be signed and verified with GNU Privacy Guard (GPG)."
  },
  {
    "objectID": "git_and_r.html",
    "href": "git_and_r.html",
    "title": "",
    "section": "",
    "text": "Code\nNow we have changed files and committed those changes on Github, but the plan is to work on our code locally on our computer (just as we are used to) and to use git/Github to track our work.\nWe will follow the Data carpentries tutorial here: https://datacarpentry.org/rr-version-control/03-git-in-rstudio/"
  },
  {
    "objectID": "git_and_r.html#look-at-the-git-tab-in-rstudio",
    "href": "git_and_r.html#look-at-the-git-tab-in-rstudio",
    "title": "",
    "section": "Look at the git tab in Rstudio",
    "text": "Look at the git tab in Rstudio\nCan you find the commit history?"
  },
  {
    "objectID": "git_and_r.html#via-rstudio",
    "href": "git_and_r.html#via-rstudio",
    "title": "",
    "section": "via Rstudio",
    "text": "via Rstudio\n\nin Rstudio, in the lower right corner, click on the plus documentsbutton in the Filestab\nspecify the type of document and the name"
  },
  {
    "objectID": "git_and_r.html#via-copy-paste",
    "href": "git_and_r.html#via-copy-paste",
    "title": "",
    "section": "via copy-paste",
    "text": "via copy-paste\n\ncopy the file you have already been working on into the Rstudio project directory\nthey will appear in the lower right in Rstudio"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "tutorials",
    "section": "",
    "text": "These are the tutorials for the “open science theory and practice” part of the course “Data handling and high-quality illustrations for publications”."
  },
  {
    "objectID": "index.html#install-git",
    "href": "index.html#install-git",
    "title": "tutorials",
    "section": "Install git",
    "text": "Install git\nInstructions on how to install git"
  },
  {
    "objectID": "index.html#configure-git-in-rstudio",
    "href": "index.html#configure-git-in-rstudio",
    "title": "tutorials",
    "section": "configure git in Rstudio",
    "text": "configure git in Rstudio\nInstructions on how to configure git in Rstudio"
  },
  {
    "objectID": "index.html#set-up-keys-for-ssh-access",
    "href": "index.html#set-up-keys-for-ssh-access",
    "title": "tutorials",
    "section": "Set up keys for SSH access",
    "text": "Set up keys for SSH access\nAdding a new SSH key to your GitHub account\nalternative information:\nSet up keys to identify yourself with github"
  }
]